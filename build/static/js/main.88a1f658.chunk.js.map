{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["client","ApolloClient","uri","gql","_templateObject","UserTable","_ref3","users","length","keys","Object","slice","map","e","charAt","toUpperCase","toLowerCase","react_default","a","createElement","className","key","user","JSON","stringify","ukey","CheckBoxes","_ref4","handleCheckbox","Fragment","type","value","onChange","TheForm","_ref5","u","updateUser","addUser","feedback","onSubmit","placeholder","name","userName","required","email","firstName","lastName","password","App","_useState","useState","_useState2","slicedToArray","setU","_useState3","_useState4","setUsers","_useState5","_useState6","mewant","setMewant","_useState7","_useState8","setFeedback","getAllUsers","_getAllUsers","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee3","ALL_USERS2","response","data","wrap","_context3","prev","next","console","log","_templateObject4","join","query","fetchPolicy","sent","loading","error","stop","useEffect","resetUsers","_ref","_callee","QUERY","_context","_templateObject2","mutate","mutation","setTimeout","_ref2","_callee2","ADD_USER","newUser","msg","_context2","preventDefault","_templateObject3","variables","id","_x","react_apollo_esm","onClick","checked","target","push","filter","objectSpread","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88a1f658.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport gql from \"graphql-tag\";\nimport { Query, ApolloProvider } from \"react-apollo\";\nimport \"./App.css\";\n\nconst client = new ApolloClient({ uri: `https://hupra.dk/miniproject/graphql` });\n\nconst ALL_USERS = gql`\n\t{\n\t\tgetAllUsers {\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\temail\n\t\t\tpassword\n\t\t}\n\t}\n`;\n\nfunction App() {\n\tlet [u, setU] = useState({\n\t\tuserName: \"kurtw\",\n\t\tfirstName: \"kurt\",\n\t\tlastName: \"wonnegut\",\n\t\temail: \"kurt@mailen.dk\",\n\t\tpassword: \"123\"\n\t});\n\tconst [users, setUsers] = useState([]);\n\tlet [mewant, setMewant] = useState([\"userName\", \"id\"]);\n\tconst [feedback, setFeedback] = useState(false);\n\n\tuseEffect(() => getAllUsers(), []);\n\n\tasync function getAllUsers() {\n\t\tconsole.log(\"bah\");\n\t\tconst ALL_USERS2 = gql`\n\t\t\t{\n\t\t\t\tgetAllUsers {\n\t\t\t\t\t${mewant.join(\" \")}\n\t\t\t\t}\n\t\t\t}\n\t\t`;\n\t\tconst response = await client.query({\n\t\t\tquery: ALL_USERS2,\n\t\t\tfetchPolicy: \"no-cache\"\n\t\t});\n\t\tconst { data, loading, error } = response;\n\n\t\tconsole.log(data.getAllUsers);\n\t\tsetUsers(data.getAllUsers);\n\t}\n\n\tconst handleCheckbox = e => {\n\t\tconst checked = e.target.checked;\n\t\tconst value = e.target.value;\n\n\t\tif (checked) mewant.push(value);\n\t\telse mewant = mewant.filter(e => e !== value);\n\n\t\tsetMewant(mewant);\n\n\t\tgetAllUsers();\n\t};\n\n\tconst updateUser = e => {\n\t\tconst name = e.target.name;\n\t\tconst value = e.target.value;\n\n\t\tu[name] = value;\n\n\t\tsetU({ ...u });\n\t};\n\n\tconst resetUsers = async () => {\n\t\tconst QUERY = gql`\n\t\t\tmutation {\n\t\t\t\tresetUsers\n\t\t\t}\n\t\t`;\n\n\t\tawait client.mutate({ mutation: QUERY });\n\n\t\tsetTimeout(() => {\n\t\t\tgetAllUsers();\n\t\t}, 50);\n\t};\n\n\tconst addUser = async e => {\n\t\te.preventDefault();\n\n\t\tconst ADD_USER = gql`\n\t\t\tmutation($user: UserInput!) {\n\t\t\t\taddUser(input: $user) {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t}\n\t\t`;\n\n\t\tconst response = await client.mutate({\n\t\t\tmutation: ADD_USER,\n\t\t\tvariables: { user: u }\n\t\t});\n\t\tconst newUser = response.data.addUser;\n\n\t\tlet msg = \"Username already in use\";\n\t\tif (newUser) msg = \"new users id: \" + newUser.id;\n\n\t\tsetFeedback(msg);\n\t\tgetAllUsers();\n\t};\n\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<div className=\"App container\">\n\t\t\t\t<UserTable users={users} />\n\t\t\t\t<hr />\n\t\t\t\t<button className=\"btn btn-danger\" onClick={resetUsers}>\n\t\t\t\t\tReset users\n\t\t\t\t</button>\n\t\t\t\t<hr />\n\t\t\t\t<CheckBoxes handleCheckbox={handleCheckbox} />\n\t\t\t\t<TheForm\n\t\t\t\t\tu={u}\n\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\taddUser={addUser}\n\t\t\t\t\tfeedback={feedback}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</ApolloProvider>\n\t);\n}\n\nfunction UserTable({ users }) {\n\tif (users.length === 0) return \"No data found\";\n\n\tconst keys = Object.keys(users[0])\n\t\t.slice(0, -1)\n\t\t.map(e => e.charAt(0).toUpperCase() + e.slice(1).toLowerCase());\n\n\treturn (\n\t\t<table className=\"table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t{keys.map(key => (\n\t\t\t\t\t\t<th key={key}>{key}</th>\n\t\t\t\t\t))}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{users.map(user => (\n\t\t\t\t\t<tr key={JSON.stringify(user)}>\n\t\t\t\t\t\t{Object.keys(user)\n\t\t\t\t\t\t\t.slice(0, -1)\n\t\t\t\t\t\t\t.map(ukey => (\n\t\t\t\t\t\t\t\t<td key={ukey}>{user[ukey]}</td>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n}\n\nfunction CheckBoxes({ handleCheckbox }) {\n\treturn (\n\t\t<>\n\t\t\t<di>\n\t\t\t\t<input type=\"checkbox\" value=\"email\" onChange={handleCheckbox} />\n\t\t\t\t<label>email</label>\n\t\t\t\t<br />\n\t\t\t\t<input type=\"checkbox\" value=\"firstName\" onChange={handleCheckbox} />\n\t\t\t\t<label>firstName</label>\n\t\t\t\t<br />\n\t\t\t\t<input type=\"checkbox\" value=\"lastName\" onChange={handleCheckbox} />\n\t\t\t\t<label>lastName</label>\n\t\t\t\t<br />\n\t\t\t\t<input type=\"checkbox\" value=\"userName\" onChange={handleCheckbox} />\n\t\t\t\t<label>userName</label>\n\t\t\t</di>\n\t\t</>\n\t);\n}\n\nfunction TheForm({ u, updateUser, addUser, feedback }) {\n\treturn (\n\t\t<>\n\t\t\t<hr />\n\t\t\t<h3>Make new user</h3>\n\t\t\t<form className=\"row\" onSubmit={addUser}>\n\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Username</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tplaceholder=\"Enter username\"\n\t\t\t\t\t\t\tname=\"userName\"\n\t\t\t\t\t\t\tvalue={u.userName}\n\t\t\t\t\t\t\tonChange={updateUser}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Email address</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tplaceholder=\"Enter email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tvalue={u.email}\n\t\t\t\t\t\t\tonChange={updateUser}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Firstname</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tplaceholder=\"Enter firstname\"\n\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\tvalue={u.firstName}\n\t\t\t\t\t\t\tonChange={updateUser}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Lastname</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"test\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tplaceholder=\"Enter lastname\"\n\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\tvalue={u.lastName}\n\t\t\t\t\t\t\tonChange={updateUser}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-sm-6\">\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tvalue={u.password}\n\t\t\t\t\t\t\tonChange={updateUser}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{feedback && <div className=\"col-sm-12\">{feedback}</div>}\n\n\t\t\t\t<div className=\"col-sm-12\">\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button className=\"btn btn-primary\">Submit</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}